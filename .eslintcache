[{"C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\index.js":"1","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\App.js":"2","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\reducers\\rootReducer.js":"3","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\config\\fb_config.js":"4","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\routes\\index.js":"5","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\reducers\\studentReducer.js":"6","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\reducers\\questionReducer.js":"7","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\reducers\\proctorReducer.js":"8","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\reducers\\authreducer.js":"9","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\reducers\\questionSetReducer.js":"10","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\authentication\\sign_in.js":"11","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\proctor\\image_detail.js":"12","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\students\\student_page.js":"13","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\addData\\flaggedData\\add_data.js":"14","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\proctor\\utility_functions.js":"15","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\actions\\auth_actions.js":"16","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\actions\\proctor_actions.js":"17","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\actions\\questions_actions.js":"18","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\actions\\question_set_actions.js":"19","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\admin_home.js":"20","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\proctor\\CardView\\card_summary.js":"21","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\proctor\\MediaListView\\media_summary.js":"22","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\nav_bar.js":"23","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\addData\\questions\\add_questions.js":"24","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\students\\test_accordion.js":"25","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\reducers\\usersReducer.js":"26","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\actions\\users_actions.js":"27","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\disqualified\\CardView\\card_summary.js":"28","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\disqualified\\MediaListView\\media_summary.js":"29","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\disqualified\\disqualified_page.js":"30","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\proctor\\proctor_page.js":"31"},{"size":1465,"mtime":1608118522138,"results":"32","hashOfConfig":"33"},{"size":551,"mtime":1610739919270,"results":"34","hashOfConfig":"33"},{"size":749,"mtime":1610695097176,"results":"35","hashOfConfig":"33"},{"size":1289,"mtime":1607773005646,"results":"36","hashOfConfig":"33"},{"size":1589,"mtime":1610955914792,"results":"37","hashOfConfig":"33"},{"size":227,"mtime":1607778441344,"results":"38","hashOfConfig":"33"},{"size":581,"mtime":1608566829408,"results":"39","hashOfConfig":"33"},{"size":1808,"mtime":1610719130895,"results":"40","hashOfConfig":"33"},{"size":670,"mtime":1607779081976,"results":"41","hashOfConfig":"33"},{"size":655,"mtime":1608563877168,"results":"42","hashOfConfig":"33"},{"size":3252,"mtime":1610737337996,"results":"43","hashOfConfig":"33"},{"size":21165,"mtime":1610770902737,"results":"44","hashOfConfig":"33"},{"size":2228,"mtime":1610955894062,"results":"45","hashOfConfig":"33"},{"size":2023,"mtime":1608794758645,"results":"46","hashOfConfig":"33"},{"size":964,"mtime":1608176779237,"results":"47","hashOfConfig":"33"},{"size":675,"mtime":1607758281385,"results":"48","hashOfConfig":"33"},{"size":3290,"mtime":1610719344426,"results":"49","hashOfConfig":"33"},{"size":2188,"mtime":1608555219668,"results":"50","hashOfConfig":"33"},{"size":854,"mtime":1608807365551,"results":"51","hashOfConfig":"33"},{"size":675,"mtime":1610729045712,"results":"52","hashOfConfig":"33"},{"size":3764,"mtime":1610719390553,"results":"53","hashOfConfig":"33"},{"size":2166,"mtime":1610718300943,"results":"54","hashOfConfig":"33"},{"size":2901,"mtime":1610710365334,"results":"55","hashOfConfig":"33"},{"size":8859,"mtime":1610737264585,"results":"56","hashOfConfig":"33"},{"size":8278,"mtime":1610769143711,"results":"57","hashOfConfig":"33"},{"size":456,"mtime":1610696931674,"results":"58","hashOfConfig":"33"},{"size":629,"mtime":1610769999450,"results":"59","hashOfConfig":"33"},{"size":3345,"mtime":1610711399176,"results":"60","hashOfConfig":"33"},{"size":1049,"mtime":1610711386201,"results":"61","hashOfConfig":"33"},{"size":4349,"mtime":1610955859079,"results":"62","hashOfConfig":"33"},{"size":4241,"mtime":1610955846773,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"ehxxzs",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\index.js",[],["135","136"],"C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\App.js",[],"C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\reducers\\rootReducer.js",[],"C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\config\\fb_config.js",[],"C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\routes\\index.js",["137"],"C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\reducers\\studentReducer.js",[],"C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\reducers\\questionReducer.js",[],"C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\reducers\\proctorReducer.js",[],"C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\reducers\\authreducer.js",[],"C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\reducers\\questionSetReducer.js",[],"C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\authentication\\sign_in.js",[],"C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\proctor\\image_detail.js",["138","139","140","141"],"import React, {useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect, firebaseConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ESNavbar from '../nav_bar'\r\nimport {Link} from 'react-router-dom'\r\nimport { Button, Carousel, Col, Container, Row, Table } from 'react-bootstrap';\r\nimport {getHeadPoseInterpretation} from './utility_functions'\r\nimport {disqualifyUser, verifyUser, addDisqualifiedUsers, wrongTriggers} from '../../actions/proctor_actions';\r\n\r\nconst ImageDetail = (props) => {\r\n    //const id = props.match.params.id;\r\n    //console.log(props);\r\n    const testnumber = props.match.params.testnumber;\r\n    const username = props.match.params.id;\r\n    const {data, auth} = props;\r\n    //console.log(data)\r\n    const [index, setIndex] = useState(0);\r\n    const handleSelect = (selectedIndex, e) => {\r\n      //console.log(selectedIndex,e);\r\n      setIndex(selectedIndex);\r\n    };\r\n    const imageArray = []\r\n    if(!data) return <Redirect to='/proctorpage'/>\r\n    Object.keys(data).forEach(image => {\r\n        imageArray.push(data[image])\r\n    });\r\n\r\n    const deleteTriggerRecord = () => {\r\n        props.wrongTriggers({testnumber:testnumber, username:username, images:imageArray});\r\n        props.verifyUser({username:props.name, testnumber:testnumber});\r\n        <Redirect to='/proctorpage'/>\r\n    }\r\n\r\n    const disqualifyStudent = () => {\r\n        //console.log(props.triggeredUsers)\r\n        props.addDisqualifiedUsers({testnumber:testnumber, username:username, images:imageArray});\r\n        props.disqualifyUser({username:username, testnumber:testnumber});\r\n        <Redirect to='/proctorpage'/>\r\n    }\r\n\r\n    const nextIcon = <span aria-hidden='true' className=\"carousel-control-next-icon\" style={{backgroundColor:'grey'}}></span>\r\n    const prevIcon = <span aria-hidden='true' className=\"carousel-control-prev-icon\" style={{backgroundColor:'grey'}}></span>\r\n    const ControlledCarousel = () => {\r\n        return (\r\n            <Carousel activeIndex={index} onSelect={handleSelect} interval={null} nextIcon={nextIcon} prevIcon={prevIcon} style={{color:'black'}}>\r\n              {imageArray && imageArray.map(data => {\r\n                  //console.log(data);\r\n                  return(\r\n                      <Carousel.Item>\r\n                        <div className=\"\" style={{padding:20, margin:20}}>\r\n                        <img\r\n                            className=\"d-block carousel img-fluid\"\r\n                            src={data.imageURL}\r\n                            style={{borderRadius:30, padding:10, width:500, height:300}}\r\n                            alt=\"triggered-user-examsecure\"\r\n                        />\r\n                        </div>\r\n                      {/* <Carousel.Caption>\r\n                          <div className=\"carousel-caption\">\r\n                              <p>{data.reason}</p>\r\n                          </div>\r\n                      </Carousel.Caption> */}\r\n                      </Carousel.Item>\r\n                  )\r\n              })}\r\n            </Carousel>\r\n        );\r\n    }\r\n    const testRes = imageArray[index].testRes\r\n    //console.log(testRes)\r\n    //console.log(props.history.goBack)\r\n    if(!auth.uid) return <Redirect to='/signin'/>\r\n    if(data){\r\n        return (\r\n            <>\r\n\r\n            <div>\r\n                <ESNavbar />\r\n\r\n                <Container>\r\n                    <h2 style={{fontWeight:'bold'}}> Image Analysis </h2>\r\n                    <div>\r\n                        <p>\r\n                            ExamSecure is able to detect many attributes from the camera image\r\n                            capture using the power of AWS Rekognition. This image was flagged by AWS Rekognition. In detail analysis for the same is given below. The proctor is requested to verify the student activity or else disqualify from the exam.\r\n                            <br />\r\n                            <br />\r\n                        </p>\r\n                    </div>\r\n                    <Row >\r\n                        <Col xs={12} md={6}>\r\n                            \r\n                            <ControlledCarousel />\r\n                            {testRes[3].Success ?  <div\r\n                                    className={\"container\"}\r\n                                    style={{\r\n                                        margin: \"20px auto 30px auto\",\r\n                                    }}\r\n                                >\r\n                                    <div>\r\n                                        <span style={{fontWeight:'bold', marginRight:5}}>Reason:</span>\r\n                                        <span>{imageArray[index].reason}</span>\r\n                                        <h3>Head Pose Analysis</h3>\r\n                                        <Table striped bordered hover>\r\n                                            <thead>\r\n                                            <tr>\r\n                                                <th>#</th>\r\n                                                <th>Analysis Parameter</th>\r\n                                                <th>Analysis Result</th>\r\n                                            </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                            <tr>\r\n                                                <td>1</td>\r\n                                                <td>Roll</td>\r\n                                                <td>\r\n                                                {testRes ? testRes[3].MoreDetails[0].Pose\r\n                                                    ? testRes[3].MoreDetails[0].Pose.Roll\r\n                                                    : \"No Face Detected\" : \"No Image Detected\"}\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>2</td>\r\n                                                <td>Pitch</td>\r\n                                                <td>\r\n                                                {testRes ? testRes[3].MoreDetails[0].Pose\r\n                                                    ? testRes[3].MoreDetails[0].Pose.Pitch\r\n                                                    : \"No Face Detected\" : \"No Image Detected\"}\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>3</td>\r\n                                                <td>Yaw</td>\r\n                                                <td>\r\n                                                {testRes ? testRes[3].MoreDetails[0].Pose\r\n                                                    ? testRes[3].MoreDetails[0].Pose.Yaw\r\n                                                    : \"No Face Detected\" : \"No Image Detected\"}\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>4</td>\r\n                                                <td>Interpretation</td>\r\n                                                <td>\r\n                                                {testRes ? testRes[3].MoreDetails[0] ? (\r\n                                                    <b>\r\n                                                    {getHeadPoseInterpretation(\r\n                                                        testRes[3].MoreDetails[0].Pose\r\n                                                        .Roll,\r\n                                                        testRes[3].MoreDetails[0].Pose\r\n                                                        .Pitch,\r\n                                                        testRes[3].MoreDetails[0].Pose.Yaw\r\n                                                    )}\r\n                                                    </b>\r\n                                                ) : (\r\n                                                    \"No Face Detected\"\r\n                                                ) : \"No Image Detected\"}\r\n                                                </td>\r\n                                            </tr>\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    </div>\r\n                                </div> : null}\r\n                        </Col>\r\n                        <Col xs={12} md={6}>\r\n                        <div className=\"demoTestResults\">\r\n                            <h3 style={{padding:5}}>Results of Image Analysis</h3>\r\n                            <Table striped bordered hover>\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>Analysis Description</th>\r\n                                    <th>Analysis Result</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td>1</td>\r\n                                    <td>Number of Faces Detected</td>\r\n                                    <td>{testRes ? testRes[3].Details : \"-\"}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>2</td>\r\n                                    <td>Was Person Recognised</td>\r\n                                    <td>\r\n                                    {testRes ? (\r\n                                        <>\r\n                                        {testRes[2].Success\r\n                                            ? `Yes. Identity: ${testRes[2].Details}`\r\n                                            : \"No\"}\r\n                                        </>\r\n                                    ) : (\r\n                                        \"-\"\r\n                                    )}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>3</td>\r\n                                    <td>Multiple Persons Warning</td>\r\n                                    <td>\r\n                                    {testRes ? (\r\n                                        <>\r\n                                        {testRes[3].Details > 1 ? (\r\n                                            <b>Multiple Persons Detected!</b>\r\n                                        ) : (\r\n                                            \"No\"\r\n                                        )}\r\n                                        </>\r\n                                    ) : (\r\n                                        \"-\"\r\n                                    )}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>4</td>\r\n                                    <td>No Face in Frame Warning</td>\r\n                                    <td>\r\n                                    {testRes ? (\r\n                                        <>\r\n                                        {testRes[3].Details === 0 ? (\r\n                                            <b>Cannot detect any face!</b>\r\n                                        ) : (\r\n                                            \"No\"\r\n                                        )}\r\n                                        </>\r\n                                    ) : (\r\n                                        \"-\"\r\n                                    )}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>5</td>\r\n                                    <td>Violating object in sight Warning</td>\r\n                                    <td>\r\n                                    {testRes ? (\r\n                                        <>\r\n                                        {testRes[0].Success === false\r\n                                            ? `Yes. ${testRes[0].Details}`\r\n                                            : \"No\"}\r\n                                        </>\r\n                                    ) : (\r\n                                        \"-\"\r\n                                    )}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan={\"3\"}>\r\n                                    <i>\r\n                                        Predicted attributes of the most prominent face\r\n                                        detected -\r\n                                    </i>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>6</td>\r\n                                    <td>Predicted Age Range</td>\r\n                                    <td>\r\n                                    {testRes[3].Success ? testRes[3].MoreDetails[0] ? (\r\n                                        <>\r\n                                        {testRes[3].MoreDetails[0].AgeRange.Low} -{\" \"}\r\n                                        {testRes[3].MoreDetails[0].AgeRange.High}\r\n                                        </>\r\n                                    ) : (\r\n                                        \"-\"\r\n                                    ) : \"-\"}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>7</td>\r\n                                    <td>Predicted Gender</td>\r\n                                    <td>\r\n                                    {testRes[3].Success ? testRes[3].MoreDetails[0] ? (\r\n                                        <>{testRes[3].MoreDetails[0].Gender.Value}</>\r\n                                    ) : (\r\n                                        \"-\"\r\n                                    ): \"-\"}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>9</td>\r\n                                    <td>Eyewear</td>\r\n                                    <td>\r\n                                    {testRes[3].Success ? testRes[3].MoreDetails[0] ? (\r\n                                        <>\r\n                                        {testRes[3].MoreDetails[0].Eyeglasses.Value ||\r\n                                        testRes[3].MoreDetails[0].Sunglasses.Value\r\n                                            ? \"Yes\"\r\n                                            : \"No\"}\r\n                                        </>\r\n                                    ) : (\r\n                                        \"-\"\r\n                                    ): \"-\"}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>10</td>\r\n                                    <td>Facial Expression - Smile</td>\r\n                                    <td>\r\n                                    {testRes[3].Success ? testRes[3].MoreDetails[0] ? (\r\n                                        <>\r\n                                        {testRes[3].MoreDetails[0].Smile.Value\r\n                                            ? \"Yes\"\r\n                                            : \"No\"}\r\n                                        </>\r\n                                    ) : (\r\n                                        \"-\"\r\n                                    ) : \"-\"}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>11</td>\r\n                                    <td>Facial Expression - Eyes Open?</td>\r\n                                    <td>\r\n                                    {testRes[3].Success ? testRes[3].MoreDetails[0] ? (\r\n                                        <>\r\n                                        {testRes[3].MoreDetails[0].EyesOpen.Value\r\n                                            ? \"Yes\"\r\n                                            : \"No\"}\r\n                                        </>\r\n                                    ) : (\r\n                                        \"-\"\r\n                                    ) : \"-\"}\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td>12</td>\r\n                                    <td>Facial Expression - Mouth Open?</td>\r\n                                    <td>\r\n                                    {testRes[3].Success ? testRes[3].MoreDetails[0] ? (\r\n                                        <>\r\n                                        {testRes[3].MoreDetails[0].MouthOpen.Value\r\n                                            ? \"Yes\"\r\n                                            : \"No\"}\r\n                                        </>\r\n                                    ) : (\r\n                                        \"-\"\r\n                                    ) : \"-\"}\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td>13</td>\r\n                                    <td>Predicted Prominent Emotion</td>\r\n                                    <td>\r\n                                    {testRes[3].Success ? testRes[3].MoreDetails[0] ? (\r\n                                        <>\r\n                                        {\r\n                                            testRes[3].MoreDetails[0].Emotions[0].Type\r\n                                        }{\" \"}\r\n                                        -{\" \"}\r\n                                        {Math.floor(\r\n                                            testRes[3].MoreDetails[0].Emotions[0].Confidence\r\n                                        )}\r\n                                        %\r\n                                        </>\r\n                                    ) : (\r\n                                        \"-\"\r\n                                    ) : \"-\"}\r\n                                    </td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                \r\n            {/* <p>Page Id: </p> */}\r\n            </div>\r\n            <div style={{display:'flex', justifyContent:'center', padding:20}}>\r\n                <div>\r\n                    <a className=\"btn btn-outline-success\" onClick={deleteTriggerRecord}>Verify</a>\r\n                    <a className=\"btn btn-outline-success disqualify\" onClick={disqualifyStudent}>Disqualify</a>\r\n                </div>\r\n            {/* <Link to='/proctorpage2' className=\"btn btn-outline-success navigation-button\">Go Back</Link> */}\r\n            <button className=\"btn btn-outline-success navigation-button\" onClick={props.history.goBack}>Go Back</button>\r\n            </div>\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <h1>Data Not Found!</h1>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        disqualifyUser: (disqualifyUsers) => dispatch(disqualifyUser(disqualifyUsers)),\r\n        verifyUser: (verifyUsers) => dispatch(verifyUser(verifyUsers)),\r\n        addDisqualifiedUsers: (disqualifyUsers) => dispatch(addDisqualifiedUsers(disqualifyUsers)),\r\n        wrongTriggers: (wrongTrigger) => dispatch(wrongTriggers(wrongTrigger)),\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    //console.log(state);\r\n    //console.log(ownProps)\r\n    const testnumber = ownProps.match.params.testnumber;\r\n    const id = ownProps.match.params.id;\r\n    const flaggedData = state.firestore.data.flaggedData;\r\n    const fData = flaggedData ? flaggedData[id] : null;\r\n    const triggeredUser = state.firebase.data.triggeredUsers;\r\n    const tData = triggeredUser ? triggeredUser[testnumber] ? triggeredUser[testnumber][id] : null : null;\r\n    //console.log(tData)\r\n    return {\r\n        olddata: fData,\r\n        auth: state.firebase.auth,\r\n        data: tData,\r\n        id: id,\r\n        testnumber: testnumber\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        {collection: 'flaggedData'}\r\n    ]),\r\n    firebaseConnect([\r\n        'triggeredUsers'\r\n    ])\r\n)(ImageDetail);\r\n","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\students\\student_page.js",["142","143"],"C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\addData\\flaggedData\\add_data.js",[],"C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\proctor\\utility_functions.js",[],"C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\actions\\auth_actions.js",[],"C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\actions\\proctor_actions.js",[],"C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\actions\\questions_actions.js",["144"],"export const uploadQuestions = (uploadQuestion) => {\r\n    return async (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n        const firebase = getFirebase();\r\n        const database = firebase.database();\r\n        var data = {\r\n            id: 'q'+String(Number(uploadQuestion.qID)+1),\r\n            opts: {\r\n                0: {\r\n                    optID: 'q'+String(Number(uploadQuestion.qID)+1)+1,\r\n                    optText: uploadQuestion.option1\r\n                },\r\n                1: {\r\n                    optID: 'q'+String(Number(uploadQuestion.qID)+1)+2,\r\n                    optText: uploadQuestion.option2\r\n                },\r\n                2: {\r\n                    optID: 'q'+String(Number(uploadQuestion.qID)+1)+3,\r\n                    optText: uploadQuestion.option3\r\n                },\r\n                3: {\r\n                    optID: 'q'+String(Number(uploadQuestion.qID)+1)+4,\r\n                    optText: uploadQuestion.option4\r\n                },\r\n            },\r\n            question: uploadQuestion.question,\r\n            answer: 'q'+String(Number(uploadQuestion.qID)+1)+uploadQuestion.answer\r\n        }\r\n        database.ref('questions/'+uploadQuestion.testname+'/'+uploadQuestion.qID).set(data).then(() => {\r\n            console.log('UPLOADED QUESTION')\r\n            dispatch({type: 'UPLOAD_QUESTION', uploadQuestion});\r\n        }).catch((error) => {\r\n            dispatch({type:'UPLOAD_QUESTION_ERROR', error});\r\n        });\r\n\r\n        // firestore.collection(uploadQuestion.testname).add({\r\n        //     question: uploadQuestion.question,\r\n        //     option1: uploadQuestion.option1,\r\n        //     option2: uploadQuestion.option2,\r\n        //     option3: uploadQuestion.option3,\r\n        //     option4: uploadQuestion.option4,\r\n        //     answer: uploadQuestion.answer\r\n        // }).then(() => {\r\n        //     console.log('UPLOADED QUESTION')\r\n        //     dispatch({type: 'UPLOAD_QUESTION', uploadQuestion});\r\n        // }).catch((error) => {\r\n        //     dispatch({type:'UPLOAD_QUESTION_ERROR', error});\r\n        // })\r\n        \r\n    }\r\n};","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\actions\\question_set_actions.js",[],"C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\admin_home.js",["145"],"import React from 'react';\r\nimport '../styles/admin_home.css';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport ESNavbar from './nav_bar';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction AdminHome(props) {\r\n    const {auth} = props;\r\n    if(!auth.uid) return <Redirect to='/signin'/>\r\n    return (\r\n        <>\r\n        <Redirect to='/proctorpage'/>\r\n        <div>\r\n            <ESNavbar />\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state);\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n)(AdminHome);","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\proctor\\CardView\\card_summary.js",["146","147"],"import React, {useState} from 'react'\r\nimport { Carousel } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { Link } from \"react-router-dom\";\r\nimport { compose } from 'redux';\r\nimport {disqualifyUser, verifyUser, addDisqualifiedUsers, wrongTriggers} from '../../../actions/proctor_actions';\r\n\r\n\r\nfunction ControlledCarousel({imageArray, props }) {\r\n    const [index, setIndex] = useState(0);\r\n    const handleSelect = (selectedIndex, e) => {\r\n      //console.log(selectedIndex,e);\r\n      setIndex(selectedIndex);\r\n    };\r\n    //console.log(imageArray)\r\n    return (\r\n      <Carousel activeIndex={index} onSelect={handleSelect} interval={null}>\r\n        {imageArray && imageArray.map(data => {\r\n            //console.log(data);\r\n            return(\r\n                <Carousel.Item>\r\n                <img\r\n                    className=\"d-block w-100 carousel\"\r\n                    src={data.imageURL}\r\n                    alt=\"triggered-user-examsecure\"\r\n                />\r\n                <Carousel.Caption>\r\n                    <div className=\"carousel-caption\">\r\n                        <p>{data.reason}</p>\r\n                    </div>\r\n                </Carousel.Caption>\r\n                </Carousel.Item>\r\n            )\r\n        })}\r\n      </Carousel>\r\n    );\r\n  }\r\n  \r\n//render(<ControlledCarousel />);\r\n\r\nconst CardSummary = (props) => {\r\n    //console.log(props)\r\n    const imageArray = []\r\n    Object.keys(props.data).forEach(image => {\r\n        imageArray.push(props.data[image])\r\n    })\r\n    const deleteTriggerRecord = () => {\r\n        props.wrongTriggers({testnumber:props.testnumber, username:props.name, images:imageArray})\r\n        props.verifyUser({username:props.name, testnumber:props.testnumber})\r\n    }\r\n\r\n    const disqualifyStudent = () => {\r\n        //console.log(props.triggeredUsers)\r\n        props.addDisqualifiedUsers({testnumber:props.testnumber, username:props.name, images:imageArray})\r\n        props.disqualifyUser({username:props.name, testnumber:props.testnumber})\r\n    }\r\n    //console.log(imageArray)\r\n    return (\r\n        <div className=\"card text-center\">\r\n            <Link to={'/imagedetail/' + props.testnumber+ '/' + props.name}>\r\n            <div className=\"overflow\">\r\n                {/* <img src={imageArray[0].imageURL}  alt= 'triggered User examsecure' className=\"card-img-top\"/> */}\r\n                <ControlledCarousel imageArray={imageArray} props={props}/>\r\n            </div>\r\n            </Link>\r\n            <div className=\"card-body text-dark\">\r\n                <h3 className=\"card-title\">{props.name}</h3>\r\n                {/* <p className=\"card-text text-secondary\">\r\n                Reason\r\n                </p> */}\r\n                <a href=\"#\" className=\"btn btn-outline-success\" onClick={deleteTriggerRecord}>Verify</a>\r\n                <a href=\"#\" className=\"btn btn-outline-success disqualify\" onClick={disqualifyStudent}>Disqualify</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        disqualifyUser: (disqualifyUsers) => dispatch(disqualifyUser(disqualifyUsers)),\r\n        verifyUser: (verifyUsers) => dispatch(verifyUser(verifyUsers)),\r\n        addDisqualifiedUsers: (disqualifyUsers) => dispatch(addDisqualifiedUsers(disqualifyUsers)),\r\n        wrongTriggers: (wrongTrigger) => dispatch(wrongTriggers(wrongTrigger)),\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const triggeredUsers = state.firebase.ordered.triggeredUsers;\r\n    return {\r\n        triggeredUsers: triggeredUsers\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    firebaseConnect([\r\n        'triggeredUsers'\r\n    ])\r\n)(CardSummary);\r\n","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\proctor\\MediaListView\\media_summary.js",["148","149"],"import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { compose } from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {disqualifyUser, addDisqualifiedUsers} from '../../../actions/proctor_actions';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\n\r\nconst MediaSummary = (props) => {\r\n    const imageArray = []\r\n    Object.keys(props.data).forEach(image => {\r\n        imageArray.push(props.data[image])\r\n    })\r\n    //console.log(imageArray)\r\n    const deleteTriggerRecord = () => {\r\n        \r\n    }\r\n\r\n    const disqualifyStudent = () => {\r\n        //console.log(props.triggeredUsers)\r\n        props.addDisqualifiedUsers({testnumber:props.testnumber, username:props.name, images:imageArray})\r\n        props.disqualifyUser({username:props.name, testnumber:props.testnumber})\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <li className=\"media mx-5 my-3 border\">\r\n            <Link to={'/imagedetail/' + props.testnumber+ '/' + props.name}>\r\n                <img class=\"mr-3\" src={imageArray[0].imageURL} style={{borderRadius:0, height:50, width:70 }} alt=\"triggered User examsecure\"/>\r\n            </Link>\r\n                <div class=\"media-body \">\r\n                    <h5 class=\"mt-0 mb-1\" style={{fontWeight:'bold'}}>{props.name}</h5>\r\n                    Reason\r\n                </div>\r\n            <a href=\"#\" className=\"btn btn-outline-success\" onClick={deleteTriggerRecord}>Verify</a>\r\n            <a href=\"#\" className=\"btn btn-outline-success disqualify\" onClick={disqualifyStudent}>Disqualify</a>\r\n        </li>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        disqualifyUser: (disqualifyUsers) => dispatch(disqualifyUser(disqualifyUsers)),\r\n        addDisqualifiedUsers: (disqualifyUsers) => dispatch(addDisqualifiedUsers(disqualifyUsers))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const triggeredUsers = state.firebase.ordered.triggeredUsers;\r\n    return {\r\n        triggeredUsers: triggeredUsers\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    firebaseConnect([\r\n        'triggeredUsers'\r\n    ])\r\n)(MediaSummary)\r\n","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\nav_bar.js",["150"],"import Navbar from \"react-bootstrap/Navbar\";\r\nimport React, { Component } from \"react\";\r\n//import { navigate } from \"@reach/router\";\r\n//import { Auth } from \"aws-amplify\";\r\nimport logo from '../assets/logo_without_boxshadow.png'\r\n//import LogoText from \"./helpers/LogoText\";\r\nimport {Nav} from \"react-bootstrap\";\r\n//import signOut from \"../utils/signOut\";\r\nimport '../styles/header.css'\r\nimport {NavLink, Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../actions/auth_actions'\r\n\r\nconst ESNavbar = (props) => {\r\n    return (\r\n      <Navbar\r\n        bg={\"light\"}\r\n        className={\"navContainer\"}\r\n        expand={\"lg\"}\r\n        collapseOnSelect={true}\r\n      >\r\n        <Navbar.Brand>\r\n        <Link to='/' className=\"navbar-title\">\r\n            <div\r\n                className=\"logoContainer\"\r\n                style={{ cursor: \"pointer\" }}\r\n            >\r\n                <img\r\n                alt={\"examsecure\"}\r\n                src={logo}\r\n                width={70}\r\n                height={70}\r\n                className={\"navImage\"}\r\n                style={{borderRadius:0}}\r\n                />\r\n                &nbsp;\r\n                <span style={{fontWeight:\"bold\", fontSize:40, color:'#181838', textDecoration:'none'}}>  ExamSecure</span>\r\n            </div>\r\n            </Link> \r\n        </Navbar.Brand>\r\n\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse\r\n          id=\"basic-navbar-nav\"\r\n          className={\"justify-content-end\"}\r\n        >\r\n          <Nav>\r\n\r\n            {/* <Nav.Link onClick={() => <NavLink to='/addquestions'/>} eventKey={\"1\"}>\r\n              Add Questions\r\n            </Nav.Link> */}\r\n            <li>\r\n                <Nav.Link>\r\n                <NavLink to='/proctorpage' className='nav-bar-items'>Proctor Test</NavLink>\r\n                </Nav.Link>\r\n            </li>\r\n            <li>\r\n                <Nav.Link>\r\n                <NavLink to='/disqualifiedusers' className='nav-bar-items'>Disqualified Users</NavLink>\r\n                </Nav.Link>\r\n            </li>\r\n            <li>\r\n                <Nav.Link>\r\n                <NavLink to='/studentpage' className='nav-bar-items'>Student Details</NavLink>\r\n                </Nav.Link>\r\n            </li>\r\n            <li>\r\n                <Nav.Link>\r\n                <NavLink to='/addquestions' className='nav-bar-items'>Add Questions</NavLink>\r\n                </Nav.Link>\r\n            </li>\r\n            <li>\r\n                <Nav.Link onClick={props.signOut} className=\"nav-bar-items\" style={{cursor: 'pointer'}}>Sign Out\r\n                </Nav.Link>\r\n            </li>\r\n\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ESNavbar);","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\addData\\questions\\add_questions.js",[],"C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\students\\test_accordion.js",[],"C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\reducers\\usersReducer.js",[],"C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\actions\\users_actions.js",[],"C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\disqualified\\CardView\\card_summary.js",["151","152","153"],"import React, {useState} from 'react'\r\nimport { Carousel } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { Link } from \"react-router-dom\";\r\nimport { compose } from 'redux';\r\nimport {disqualifyUser, addDisqualifiedUsers} from '../../../actions/proctor_actions';\r\n\r\n\r\nfunction ControlledCarousel({imageArray, props }) {\r\n    const [index, setIndex] = useState(0);\r\n    const handleSelect = (selectedIndex, e) => {\r\n      console.log(selectedIndex,e);\r\n      setIndex(selectedIndex);\r\n    };\r\n    //console.log(imageArray)\r\n    return (\r\n      <Carousel activeIndex={index} onSelect={handleSelect} interval={null}>\r\n        {imageArray && imageArray.map(data => {\r\n            //console.log(data);\r\n            return(\r\n                <Carousel.Item>\r\n                <img\r\n                    className=\"d-block w-100 carousel\"\r\n                    src={data.imageURL}\r\n                    alt=\"disqualified-user-examsecure\"\r\n                />\r\n                <Carousel.Caption>\r\n                    <div className=\"carousel-caption\">\r\n                        <p>{data.reason}</p>\r\n                    </div>\r\n                </Carousel.Caption>\r\n                </Carousel.Item>\r\n            )\r\n        })}\r\n      </Carousel>\r\n    );\r\n  }\r\n  \r\n//render(<ControlledCarousel />);\r\n\r\nconst CardSummary = (props) => {\r\n    //console.log(props)\r\n    const imageArray = []\r\n    Object.keys(props.data).forEach(image => {\r\n        imageArray.push(props.data[image])\r\n    })\r\n    const deleteTriggerRecord = () => {\r\n        \r\n    }\r\n\r\n    const disqualifyStudent = () => {\r\n        //console.log(props.disqualifiedUsers)\r\n        props.addDisqualifiedUsers({testnumber:props.testnumber, username:props.name, images:imageArray})\r\n        props.disqualifyUser({username:props.name, testnumber:props.testnumber})\r\n    }\r\n    //console.log(imageArray)\r\n    return (\r\n        <div className=\"card text-center\">\r\n            <div className=\"overflow\">\r\n                {/* <img src={imageArray[0].imageURL}  alt= 'disqualified User examsecure' className=\"card-img-top\"/> */}\r\n                <ControlledCarousel imageArray={imageArray} props={props}/>\r\n            </div>\r\n            <div className=\"card-body text-dark\">\r\n                <h3 className=\"card-title\">{props.name}</h3>\r\n                {/* <p className=\"card-text text-secondary\">\r\n                Reason\r\n                </p> */}\r\n                {/* <a href=\"#\" className=\"btn btn-outline-success\" onClick={deleteTriggerRecord}>Verify</a>\r\n                <a href=\"#\" className=\"btn btn-outline-success disqualify\" onClick={disqualifyStudent}>Disqualify</a> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        disqualifyUser: (disqualifyUsers) => dispatch(disqualifyUser(disqualifyUsers)),\r\n        addDisqualifiedUsers: (disqualifyUsers) => dispatch(addDisqualifiedUsers(disqualifyUsers))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const disqualifiedUsers = state.firebase.ordered.disqualifiedUsers;\r\n    return {\r\n        disqualifiedUsers: disqualifiedUsers\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    firebaseConnect([\r\n        'disqualifiedUsers'\r\n    ])\r\n)(CardSummary);\r\n","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\disqualified\\MediaListView\\media_summary.js",["154","155","156"],"import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MediaSummary = (props) => {\r\n    const imageArray = []\r\n    Object.keys(props.data).forEach(image => {\r\n        imageArray.push(props.data[image])\r\n    })\r\n\r\n    const deleteTriggerRecord = () => {\r\n\r\n    }\r\n\r\n    const disqualifyStudent = () => {\r\n\r\n    }\r\n\r\n    //console.log(imageArray)\r\n    return (\r\n        <>\r\n        <li className=\"media mx-5 my-3 border\">\r\n            <img class=\"mr-3\" src={imageArray[0].imageURL} style={{borderRadius:0, height:50, width:70 }} alt=\"disqualified User examsecure\"/>\r\n            <div class=\"media-body \">\r\n                <h5 class=\"mt-0 mb-1\" style={{fontWeight:'bold'}}>{props.name}</h5>\r\n                Reason\r\n            </div>\r\n            {/* <a href=\"#\" className=\"btn btn-outline-success\" onClick={deleteTriggerRecord}>Verify</a>\r\n            <a href=\"#\" className=\"btn btn-outline-success disqualify\" onClick={disqualifyStudent}>Disqualify</a> */}\r\n        </li>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MediaSummary\r\n","C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\disqualified\\disqualified_page.js",["157","158","159"],"C:\\Users\\USER\\Documents\\reactProjects\\examsecure-educator\\src\\components\\proctor\\proctor_page.js",["160","161","162"],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":2,"column":8,"nodeType":"169","messageId":"170","endLine":2,"endColumn":15},{"ruleId":"167","severity":1,"message":"171","line":7,"column":9,"nodeType":"169","messageId":"170","endLine":7,"endColumn":13},{"ruleId":"167","severity":1,"message":"172","line":8,"column":10,"nodeType":"169","messageId":"170","endLine":8,"endColumn":16},{"ruleId":"173","severity":1,"message":"174","line":374,"column":21,"nodeType":"175","endLine":374,"endColumn":90},{"ruleId":"173","severity":1,"message":"174","line":375,"column":21,"nodeType":"175","endLine":375,"endColumn":99},{"ruleId":"167","severity":1,"message":"176","line":5,"column":9,"nodeType":"169","messageId":"170","endLine":5,"endColumn":25},{"ruleId":"167","severity":1,"message":"177","line":8,"column":27,"nodeType":"169","messageId":"170","endLine":8,"endColumn":31},{"ruleId":"167","severity":1,"message":"178","line":4,"column":15,"nodeType":"169","messageId":"170","endLine":4,"endColumn":24},{"ruleId":"167","severity":1,"message":"171","line":3,"column":9,"nodeType":"169","messageId":"170","endLine":3,"endColumn":13},{"ruleId":"173","severity":1,"message":"179","line":72,"column":17,"nodeType":"175","endLine":72,"endColumn":95},{"ruleId":"173","severity":1,"message":"179","line":73,"column":17,"nodeType":"175","endLine":73,"endColumn":104},{"ruleId":"173","severity":1,"message":"179","line":34,"column":13,"nodeType":"175","endLine":34,"endColumn":91},{"ruleId":"173","severity":1,"message":"179","line":35,"column":13,"nodeType":"175","endLine":35,"endColumn":100},{"ruleId":"167","severity":1,"message":"180","line":2,"column":17,"nodeType":"169","messageId":"170","endLine":2,"endColumn":26},{"ruleId":"167","severity":1,"message":"171","line":5,"column":10,"nodeType":"169","messageId":"170","endLine":5,"endColumn":14},{"ruleId":"167","severity":1,"message":"181","line":48,"column":11,"nodeType":"169","messageId":"170","endLine":48,"endColumn":30},{"ruleId":"167","severity":1,"message":"182","line":52,"column":11,"nodeType":"169","messageId":"170","endLine":52,"endColumn":28},{"ruleId":"167","severity":1,"message":"171","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":14},{"ruleId":"167","severity":1,"message":"181","line":10,"column":11,"nodeType":"169","messageId":"170","endLine":10,"endColumn":30},{"ruleId":"167","severity":1,"message":"182","line":14,"column":11,"nodeType":"169","messageId":"170","endLine":14,"endColumn":28},{"ruleId":"167","severity":1,"message":"183","line":1,"column":28,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"176","line":5,"column":26,"nodeType":"169","messageId":"170","endLine":5,"endColumn":42},{"ruleId":"167","severity":1,"message":"184","line":8,"column":10,"nodeType":"169","messageId":"170","endLine":8,"endColumn":20},{"ruleId":"167","severity":1,"message":"183","line":1,"column":28,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"176","line":5,"column":26,"nodeType":"169","messageId":"170","endLine":5,"endColumn":42},{"ruleId":"167","severity":1,"message":"184","line":8,"column":10,"nodeType":"169","messageId":"170","endLine":8,"endColumn":20},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"no-unused-vars","'AddData' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'firestoreConnect' is defined but never used.","'Form' is defined but never used.","'firestore' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Component' is defined but never used.","'deleteTriggerRecord' is assigned a value but never used.","'disqualifyStudent' is assigned a value but never used.","'useState' is defined but never used.","'Pagination' is defined but never used.","no-global-assign","no-unsafe-negation"]